[{"C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\index.js":"1","C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\App.js":"2","C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":1791,"mtime":1608492622022,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"y2dzie",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\index.js",[],["16","17"],"C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\App.js",["18"],"import React, {useState, useEffect} from 'react'\nimport './App.css';\n\nconst SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nconst mic = new SpeechRecognition()\nmic.continous = true\nmic.interimResults = true\nmic.lang = \"en-US\"\n\n\nfunction App() {\n\n  const [isListening, setIsListening] = useState(false)\n  const [note, setNote] = useState(null)\n  const [savedNotes, setSavedNotes] = useState([])\n\n  useEffect(() => {\n    handleListen()\n  }, [isListening])\n\n  const handleListen = () => {\n    if(isListening){\n      mic.start()\n      mic.onend = () => {\n        console.log(\"Continue..\");\n        mic.start()\n      }\n    } else {\n      mic.stop()\n      mic.onend = () => {\n        console.log(\"Stopped Mic on Click\");\n      }\n    }\n\n    mic.onstart = () => {\n      console.log(\"Mic on\");\n    }\n\n    mic.onresult = event => {\n      const transcript = Array.from(event.results)\n        .map(result => result[0])\n        .map(result => result.transcript)\n        .join('')\n\n      console.log(transcript);\n\n      setNote(transcript)\n\n      mic.onerror = event => {\n        console.log(event.error);\n      }\n    }\n\n  }\n\n  const handleSaveNote = () => {\n    setSavedNotes([...savedNotes, note])\n    setNote('')\n  }\n\n  return (\n    <>\n      <h1>Voice Notes</h1>\n      <div className=\"container\">\n        <div className=\"box\">\n          <h2>Current Note</h2>\n          <button onClick={handleSaveNote} disabled={!note}>Save Note</button>\n          <button onClick={() => setIsListening(prevSatate => !prevSatate)}>Start/Stop</button>\n          <p>{note}</p>\n        </div> \n        <div className=\"box\">\n          <h2>Notes</h2>\n          {savedNotes.map(n => (\n            <p key={n}>{n}</p>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\YOYO\\Desktop\\FullStack_Projects\\voice-to-text\\src\\reportWebVitals.js",[],{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":19,"column":6,"nodeType":"25","endLine":19,"endColumn":19,"suggestions":"26"},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleListen'. Either include it or remove the dependency array.","ArrayExpression",["29"],"no-global-assign","no-unsafe-negation",{"desc":"30","fix":"31"},"Update the dependencies array to be: [handleListen, isListening]",{"range":"32","text":"33"},[470,483],"[handleListen, isListening]"]